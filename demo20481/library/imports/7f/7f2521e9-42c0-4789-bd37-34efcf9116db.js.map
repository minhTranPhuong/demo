{"version":3,"sources":["../../../../assets/script/assets/script/main.js"],"names":["COLOR","require","Emitter","arrBlock","cc","Class","extends","Component","properties","card","default","type","Prefab","_arrBlocks","_canPress","onLoad","canPress","instance","systemEvent","on","SystemEvent","EventType","KEY_DOWN","handleKeyDown","KEY_UP","handleKeyUp","evt","keyCode","macro","KEY","up","down","left","right","moveUp","moveDown","moveLeft","moveRight","col","flatArrCard","row","handle","randomNumber","reverse","arrCard","i","length","active","checkCompare","objAnim","selfCard","otherCard","callBack","j","changeValueCards","cloneObjAnim","Object","assign","handleMove","children","getComponent","string","Number","reValue","x","y","tween","to","call","_xOld","_yOld","start","getString","index","render","init","arrRow","newCard","instantiate","parent","node","color","push","flatArray","flat","Infinity","arrNone","filter","value","Math","floor","random","log"],"mappings":"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","file":"main.js","sourceRoot":"../../../../assets/script","sourcesContent":["\nconst COLOR = require('color');\nconst Emitter = require('mEmitter');\nlet arrBlock = [];\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        card: {\n            default: null,\n            type: cc.Prefab\n        },\n        _arrBlocks: [],\n\n        _canPress: false,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        this.canPress = false;\n        Emitter.instance = new Emitter();\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.handleKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.handleKeyUp, this);\n    },\n\n    handleKeyUp(evt) {\n        switch (evt.keyCode) {\n            case cc.macro.KEY.up:\n            case cc.macro.KEY.down:\n            case cc.macro.KEY.left:\n            case cc.macro.KEY.right:\n                this._canPress = false;\n                break;\n            default: break;\n        }\n    },\n    handleKeyDown(evt) {\n        if (this._canPress) return;\n        this._canPress = true;\n        switch (evt.keyCode) {\n            case cc.macro.KEY.up:\n                this.moveUp();\n                break;\n            case cc.macro.KEY.down:\n                this.moveDown();\n                break;\n            case cc.macro.KEY.left:\n                this.moveLeft();\n                break;\n            case cc.macro.KEY.right:\n                this.moveRight();\n                break;\n            default: break;\n        }\n    },\n\n    moveUp() {\n        for (let col = 0; col < 4; col++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let row = 0; row < 4; row++) {\n                flatArrCard[row] = this._arrBlocks[row][col];\n            }\n            this.handle(flatArrCard)\n        }\n        this.randomNumber();\n    },\n    moveDown() {\n        for (let col = 0; col < 4; col++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let row = 0; row < 4; row++) {\n                flatArrCard[row] = this._arrBlocks[row][col];\n            }\n            this.handle(flatArrCard.reverse())\n        }\n        this.randomNumber();\n    },\n\n    moveLeft() {\n        for (let row = 0; row < 4; row++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let col = 0; col < 4; col++) {\n                flatArrCard[col] = this._arrBlocks[row][col];\n            }\n            this.handle(flatArrCard)\n        }\n        this.randomNumber();\n    },\n\n    moveRight() {\n        for (let row = 0; row < 4; row++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let col = 0; col < 4; col++) {\n                flatArrCard[col] = this._arrBlocks[row][col];\n            }\n\n            this.handle(flatArrCard.reverse())\n        }\n        this.randomNumber();\n    },\n\n    handle(arrCard) {\n        for (let i = 1; i < arrCard.length; i++) {\n            if (arrCard[i].active == false) {\n                continue;\n            }\n            let checkCompare = false;\n            let objAnim = { selfCard: null, otherCard: null, callBack: null }\n            for (let j = i - 1; j >= 0; j--) {\n                if (checkCompare == true) {\n                    j = -1;\n                    break;\n                }\n                checkCompare = this.changeValueCards(arrCard, i, j, objAnim);\n                let cloneObjAnim = Object.assign(objAnim);\n                this.handleMove(cloneObjAnim.selfCard, cloneObjAnim.otherCard, cloneObjAnim.callBack);\n            }\n        }\n    },\n\n    changeValueCards(arrCard, i, j, objAnim) {\n        if (arrCard[j].active == false) {\n            if (j == 0) {\n                let callBack = function (selfCard, otherCard) {\n                    otherCard.children[0].getComponent('cc.Label').string = selfCard.children[0].getComponent('cc.Label').string;\n                    selfCard.children[0].getComponent('cc.Label').string = \"0\";\n                    selfCard.active = true;\n                    otherCard.active = true;\n                }\n                objAnim.selfCard = arrCard[i];\n                objAnim.otherCard = arrCard[j];\n                objAnim.callBack = callBack;\n                return true;\n            }\n        }\n        else {\n            if (arrCard[j].children[0].getComponent('cc.Label').string == arrCard[i].children[0].getComponent('cc.Label').string) {\n                let callBack = function (selfCard, otherCard) {\n                    otherCard.children[0].getComponent('cc.Label').string = Number(otherCard.children[0].getComponent('cc.Label').string) * 2 + \"\";\n                    selfCard.children[0].getComponent('cc.Label').string = \"0\";\n                    otherCard.active = true;\n                    selfCard.active = true;\n                }\n                objAnim.selfCard = arrCard[i];\n                objAnim.otherCard = arrCard[j];\n                objAnim.callBack = callBack;\n                return true;\n            }\n            else if (arrCard[j].children[0].getComponent('cc.Label').string != arrCard[i].children[0].getComponent('cc.Label').string) {\n                let reValue = j + 1;\n                if (reValue != i) {\n                    let callBack = function (selfCard, otherCard) {\n                        otherCard.children[0].getComponent('cc.Label').string = selfCard.children[0].getComponent('cc.Label').string;\n                        selfCard.children[0].getComponent('cc.Label').string = \"0\";\n                        otherCard.active = true;\n                        selfCard.active = true;\n                    }\n                    objAnim.selfCard = arrCard[i];\n                    objAnim.otherCard = arrCard[reValue];\n                    objAnim.callBack = callBack;\n                }\n                return true;\n            }\n        }\n    },\n\n    handleMove(selfCard, otherCard, callBack) {\n        if (selfCard != null && otherCard != null) {\n            let x = otherCard.x;\n            let y = otherCard.y;\n            cc.tween(selfCard)\n                    .to(0.1, { x: x, y: y })\n                    .call(()=>callBack(selfCard,otherCard))\n                    .to(0.1, { x: selfCard.getComponent(\"card\")._xOld, y: selfCard.getComponent(\"card\")._yOld })\n                    .start()\n            // let action1 = cc.moveTo(0.5, cc.v2(x, y));\n            // let action2 = cc.callFunc(() => { callBack(selfCard, otherCard) });\n            // let action3 = cc.moveTo(0.5, cc.v2(selfCard.getComponent(\"card\")._xOld, selfCard.getComponent(\"card\")._yOld));\n            // let action = cc.sequence(action1, action2, action3);\n            // selfCard.runAction(action)\n        }\n    },\n\n    getString(arrCard, index) {\n        return arrCard[index].children[0].getComponent('cc.Label');\n    },\n\n    start() {\n        this.render();\n        this.randomNumber()\n    },\n    init() {\n    },\n\n    render() {\n\n        for (let col = 0; col < 4; col++) {\n            let arrRow = [];\n            for (let row = 0; row < 4; row++) {\n                let x = -226.227 + row * 150;\n                let y = 225.631 - col * 150;\n                let newCard = cc.instantiate(this.card);\n                newCard.parent = this.node\n                newCard.x = x;\n                newCard.y = y;\n                newCard.color = COLOR[0];\n\n                newCard.active = false\n                arrRow.push(newCard);\n            }\n            this._arrBlocks.push(arrRow)\n        }\n    },\n\n    randomNumber() {\n        let flatArray = this._arrBlocks.flat(Infinity)\n        let arrNone = flatArray.filter((value) => {\n            return value.active == false;\n        })\n        let index = Math.floor(Math.random() * arrNone.length);\n        arrNone[index].children[0].getComponent('cc.Label').string = 2;\n        arrNone[index].active = true;\n        cc.log(this._arrBlocks);\n    },\n    // update (dt) {},\n});"]}