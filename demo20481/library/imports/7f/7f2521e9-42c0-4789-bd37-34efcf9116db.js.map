{"version":3,"sources":["../../../../assets/script/assets/script/main.js"],"names":["COLOR","require","Emitter","arrBlock","cc","Class","extends","Component","properties","card","default","type","Prefab","_arrBlocks","_canPress","onLoad","canPress","instance","systemEvent","on","SystemEvent","EventType","KEY_DOWN","handleKeyDown","KEY_UP","handleKeyUp","evt","keyCode","macro","KEY","up","down","left","right","randomNumber","moveUp","moveDown","moveLeft","moveRight","col","flatArrCard","row","handle","reverse","arrCard","log","i","active","checkCompare","objEmit","selfCard","otherCard","callback","j","callBack","children","getComponent","string","Number","reValue","emit","length","getString","start","render","init","arrRow","x","y","newCard","instantiate","parent","node","color","push","flatArray","flat","Infinity","arrNone","filter","value","index","Math","floor","random"],"mappings":"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","file":"main.js","sourceRoot":"../../../../assets/script","sourcesContent":["const COLOR = require('color');\nconst Emitter = require('mEmitter');\nlet arrBlock = [];\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        card: {\n            default: null,\n            type: cc.Prefab\n        },\n        _arrBlocks: [],\n\n        _canPress: false,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        this.canPress = false;\n        Emitter.instance = new Emitter();\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.handleKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.handleKeyUp, this);\n    },\n\n    handleKeyUp(evt) {\n        switch (evt.keyCode) {\n            case cc.macro.KEY.up:\n            case cc.macro.KEY.down:\n            case cc.macro.KEY.left:\n            case cc.macro.KEY.right:\n                this.randomNumber();\n                this._canPress = false;\n                break;\n            default: break;\n        }\n    },\n    handleKeyDown(evt) {\n        if (this._canPress) return;\n        this._canPress = true;\n        switch (evt.keyCode) {\n            case cc.macro.KEY.up:\n                this.moveUp();\n                break;\n            case cc.macro.KEY.down:\n                this.moveDown();\n                break;\n            case cc.macro.KEY.left:\n                this.moveLeft();\n                break;\n            case cc.macro.KEY.right:\n                this.moveRight();\n                break;\n            default: break;\n        }\n    },\n\n    moveUp() {\n        for (let col = 0; col < 4; col++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let row = 0; row < 4; row++) {\n                flatArrCard[row] = this._arrBlocks[row][col];\n            }\n            this.handle(flatArrCard)\n        }\n    },\n    moveDown() {\n        for (let col = 0; col < 4; col++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let row = 0; row < 4; row++) {\n                flatArrCard[row] = this._arrBlocks[row][col];\n            }\n\n            this.handle(flatArrCard.reverse())\n        }\n    },\n\n    moveLeft() {\n        for (let row = 0; row < 4; row++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let col = 0; col < 4; col++) {\n                flatArrCard[col] = this._arrBlocks[row][col];\n            }\n\n            this.handle(flatArrCard)\n        }\n    },\n\n\n    moveRight() {\n        for (let row = 0; row < 4; row++) {\n            let flatArrCard = [0, 0, 0, 0];\n            for (let col = 0; col < 4; col++) {\n                flatArrCard[col] = this._arrBlocks[row][col];\n            }\n\n            this.handle(flatArrCard.reverse())\n        }\n    },\n\n    handle(arrCard) {//[0,2,2,0],[2,0,2,0],[4,0,0,0]\n        // ở vị trí 0 nó bằng 0=> thì thay đổi giá trị(2 thằng) , active(2 thằng).\n        // ở vị trí 0 nó khác 0 và nó bằng thằng card đó => valueCard * 2 , active(2 thằng), chuyền thằng i =0\n        // ở vị trí 0 nó khác 0 và nó khác thằng card đó=> thì nos thay đổi vị trí của thằng trước nó.\n        //////// ko ở vị trí 0\n        // nếu j = 0  => continue\n        // j =i => => nhân đôi j lên => active lại 2 thằng gán lại giá trị cho i =0,\n        // j khác i => lấy thằng trước nó và thay đổi giá trị \n        cc.log(arrCard);\n        for (let i = 1; i < arrCard.length; i++) {\n            if (arrCard[i].active == false) {\n                continue;\n            }\n            let checkCompare = false;\n            let objEmit = { selfCard: null, otherCard: null, callback: null };\n            for (let j = i - 1; j >= 0; j--) {\n                if (checkCompare == true) {\n                    j = -1;\n                    continue;\n                }\n                if (j == 0) {\n                    if (arrCard[j].active == false) {\n                        let callBack = function () {\n                            arrCard[j].children[0].getComponent('cc.Label').string = arrCard[i].children[0].getComponent('cc.Label').string;\n                            arrCard[i].children[0].getComponent('cc.Label').string = \"0\";\n                            arrCard[i].active = false;\n                            arrCard[j].active = true;\n                            checkCompare = true;\n                        }\n                        objEmit.otherCard = arrCard[j];\n                        objEmit.callback = callBack\n                        continue;\n                    }\n                    //else if value j == value i => value j * 2 , value i = 0 , active j = true , active i = fasle\n                    else if (arrCard[j].children[0].getComponent('cc.Label').string == arrCard[i].children[0].getComponent('cc.Label').string) {\n                        let callBack = function () {\n                            arrCard[j].children[0].getComponent('cc.Label').string = Number(arrCard[j].children[0].getComponent('cc.Label').string) * 2 + \"\";\n                            arrCard[i].children[0].getComponent('cc.Label').string = \"0\";\n                            arrCard[j].active = true;\n                            arrCard[i].active = false;\n                            checkCompare = true;\n                        }\n                        objEmit.otherCard = arrCard[j];\n                        objEmit.callback = callBack\n\n                        continue;\n                    }\n                    //else if value j != value i => value j+1 = value i , value i = 0 , active j-1 = true , active i = false; \n                    else if (arrCard[j].children[0].getComponent('cc.Label').string != arrCard[i].children[0].getComponent('cc.Label').string) {\n                        let reValue = j + 1;\n                        checkCompare = true;\n                        if (reValue == i) {\n                            continue;\n                        }\n                        else {\n                            let callBack = function () {\n                                arrCard[reValue].children[0].getComponent('cc.Label').string = arrCard[i].children[0].getComponent('cc.Label').string;\n                                arrCard[i].children[0].getComponent('cc.Label').string = \"0\";\n                                arrCard[reValue].active = true;\n                                arrCard[i].active = false;\n                            }\n                            objEmit.otherCard = arrCard[reValue];\n                            objEmit.callback = callBack;\n                            continue;\n                        }\n                    }\n                }\n                //value j active = false => continue\n                if (arrCard[j].active == false) {\n                    cc.log(\"continue\")\n                    continue;\n                }\n                // value j == value i => value j*2 && active j = true , active i = false , gán i = 0\n                if (arrCard[j].children[0].getComponent('cc.Label').string == arrCard[i].children[0].getComponent('cc.Label').string) {\n                    let callBack = function () {\n                        arrCard[j].children[0].getComponent('cc.Label').string = Number(arrCard[j].children[0].getComponent('cc.Label').string) * 2 + \"\";\n                        cc.log(arrCard[j].children[0].getComponent('cc.Label').string)\n                        arrCard[j].active = true;\n                        arrCard[i].children[0].getComponent('cc.Label').string = \"0\";\n                        arrCard[i].active = false;\n                        checkCompare = true;\n                        cc.log(arrCard[i], arrCard[j])\n                    }\n                    objEmit.otherCard = arrCard[j];\n                    objEmit.callback = callBack;\n\n                    // if(j == 1){\n                    //     j = -1;\n                    // }\n                    continue;\n                }\n                // value j != value i => value j +1 = value i , value i =0 , active j +1 = true , active i = false\n                if (arrCard[j].children[0].getComponent('cc.Label').string != arrCard[i].children[0].getComponent('cc.Label').string) {\n                    checkCompare = true;\n                    let reValue = j + 1;\n                    // nếu value trước là chính nó thì continue\n                    if (reValue == i) {\n                        continue;\n                    }\n                    let callBack = function () {\n                        arrCard[reValue].children[0].getComponent('cc.Label').string = arrCard[i].children[0].getComponent('cc.Label').string;\n                        arrCard[i].children[0].getComponent('cc.Label').string = \"0\";\n                        arrCard[reValue].active = true;\n                        arrCard[i].active = false;\n                    }\n                    objEmit.otherCard = arrCard[reValue];\n                    objEmit.callback = callBack;\n                    continue;\n                }\n            }\n            Emitter.instance.emit(\"handleMove\", arrCard[i], objEmit.otherCard , objEmit.callback)\n        }\n        // cc.log(arrCard)\n    },\n\n    getString(row, col) {\n        return this._arrBlocks[row][col].children[0].getComponent('cc.Label').string;\n    },\n\n    start() {\n        this.render();\n        this.randomNumber()\n    },\n    init() {\n    },\n\n    render() {\n\n        for (let col = 0; col < 4; col++) {\n            let arrRow = [];\n            for (let row = 0; row < 4; row++) {\n                let x = -226.227 + row * 150;\n                let y = 225.631 - col * 150;\n                let newCard = cc.instantiate(this.card);\n                newCard.parent = this.node\n                newCard.x = x;\n                newCard.y = y;\n                newCard.color = COLOR[0];\n\n                newCard.active = false\n                arrRow.push(newCard);\n            }\n            this._arrBlocks.push(arrRow)\n        }\n    },\n\n    randomNumber() {\n        let flatArray = this._arrBlocks.flat(Infinity)\n        let arrNone = flatArray.filter((value) => {\n            return value.active == false;\n        })\n        let index = Math.floor(Math.random() * arrNone.length);\n        arrNone[index].children[0].getComponent('cc.Label').string = 2;\n        arrNone[index].active = true;\n        cc.log(this._arrBlocks);\n    },\n    // update (dt) {},\n});"]}