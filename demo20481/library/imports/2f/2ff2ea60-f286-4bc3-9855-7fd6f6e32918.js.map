{"version":3,"sources":["../../../../assets/script/assets/script/card.js"],"names":["Emitter","require","COLOR","cc","Class","extends","Component","properties","lblCard","default","type","Label","_handleMoveUp","_handleMoveDown","_handleMoveLeft","_handleMoveRight","_handleDoneRandom","_action","animMove","onLoad","handleMoveUp","bind","handleMoveDown","handleMoveLeft","handleMoveRight","handleDoneRandom","instance","registerEvent","handleMoveAnim","x","y","callBack","actionMove","moveTo","v2","actionCB","callFunc","action","sequence","setColorNumber","number","node","active","color","string","objCard","opacity","children","getComponent","log","move","animMerge","start"],"mappings":"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","file":"card.js","sourceRoot":"../../../../assets/script","sourcesContent":["const Emitter = require('mEmitter');\nlet COLOR = require(\"color\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        lblCard:{\n            default: null,\n            type:cc.Label,\n        } ,\n        _handleMoveUp: null,\n        _handleMoveDown: null,\n        _handleMoveLeft: null,\n        _handleMoveRight: null,\n        _handleDoneRandom: null,\n        _action: null,\n        animMove: null,\n    },\n\n    onLoad () {\n        this._handleMoveUp = this.handleMoveUp.bind(this);\n        this._handleMoveDown = this.handleMoveDown.bind(this);\n        this._handleMoveLeft = this.handleMoveLeft.bind(this);\n        this._handleMoveRight = this.handleMoveRight.bind(this);\n        this._handleDoneRandom = this.handleDoneRandom.bind(this);\n\n        Emitter.instance.registerEvent(\"moveUp\",this._handleMoveUp);\n        Emitter.instance.registerEvent(\"moveDown\",this._handleMoveDown);\n        Emitter.instance.registerEvent(\"moveLeft\",this._handleMoveLeft);\n        Emitter.instance.registerEvent(\"moveRight\",this._handleMoveRight);\n       // Emitter.instance.registerEvent(\"doneRandom\",this._handleDoneRandom);\n       \n       this.animMove = this.handleMoveAnim;\n    },\n\n    handleMoveAnim(x,y,callBack){\n        let actionMove = cc.moveTo(1,cc.v2(x,y));\n        let actionCB = cc.callFunc(callBack);\n        let action = cc.sequence(actionMove,actionCB);\n        return action;\n    },\n\n    setColorNumber(number){\n        if(number == 0 ) {\n            this.lblCard.node.active = false;\n            this.node.color = COLOR[0];\n        }\n        else{\n            this.lblCard.string = number;\n            this.lblCard.node.active = true;\n            switch(number){\n                case 2:\n                    this.node.color = COLOR[2];\n                    break;\n                case 4:\n                    this.node.color = COLOR[4];\n                    break;\n                case 8:\n                    this.node.color = COLOR[8];\n                    break;\n                case 16:\n                    this.node.color = COLOR[16];\n                    break;  \n                case 32:\n                    this.node.color = COLOR[32];\n                    break;\n                case 64:\n                    this.node.color = COLOR[64];\n                    break;\n                case 128:\n                    this.node.color = COLOR[128];\n                    break;\n                case 256:\n                    this.node.color = COLOR[256];\n                    break;\n                case 512:\n                    this.node.color = COLOR[512];\n                    break;\n                case 1024:\n                    this.node.color = COLOR[1024];\n                    break;\n                case 2048:\n                    this.node.color = COLOR[2048];\n                    break;\n                \n            }\n        }\n    },\n\n    handleDoneRandom(objCard){\n       // cc.log(objCard)\n        if(objCard.x == this.node.x && objCard.y == this.node.y){\n            this.node.opacity = 255;\n            this.node.children[0].getComponent('cc.Label').string =2\n            this.node.color = new cc.color(235,224,213,255);\n            cc.log(objCard)\n        }\n    },\n\n    move(x,y){\n        // this._action =cc.moveBy(0,cc.v2(x,y));\n        // this.node.runAction(this._action);  \n    },\n\n    handleMoveUp(){\n        this.move(0,150);\n    },\n\n    handleMoveDown(){\n        this.move(0,-150);\n    },\n\n    handleMoveLeft(){\n        this.move(-150,0);\n    },\n\n    handleMoveRight(){\n        this.move(150,0)\n    },\n\n    animMerge(){\n\n    },\n\n    start () {\n    },\n\n    // update (dt) {},\n});\n"]}